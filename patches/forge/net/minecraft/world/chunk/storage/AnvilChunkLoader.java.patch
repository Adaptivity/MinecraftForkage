--- ../src-base/minecraft/net/minecraft/world/chunk/storage/AnvilChunkLoader.java
+++ ../src-work/minecraft/net/minecraft/world/chunk/storage/AnvilChunkLoader.java
@@ -25,6 +25,8 @@
 import net.minecraft.world.chunk.NibbleArray;
 import net.minecraft.world.storage.IThreadedFileIO;
 import net.minecraft.world.storage.ThreadedFileIOBase;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.world.ChunkDataEvent;
 
 import org.apache.logging.log4j.Level;
 import org.apache.logging.log4j.LogManager;
@@ -46,8 +48,46 @@
         this.field_75825_d = p_i2003_1_;
     }
 
+    public boolean chunkExists(World world, int i, int j)
+    {
+        ChunkCoordIntPair chunkcoordintpair = new ChunkCoordIntPair(i, j);
+
+        synchronized (this.field_75827_c)
+        {
+            if (this.field_75826_b.contains(chunkcoordintpair))
+            {
+                Iterator iter = this.field_75828_a.iterator();
+                while (iter.hasNext())
+                {
+                    PendingChunk pendingChunk = (PendingChunk)iter.next();
+                    if (pendingChunk.field_76548_a.equals(chunkcoordintpair))
+                    {
+                        return true;
+                    }
+                }
+            }
+        }
+
+        return RegionFileCache.func_76550_a(this.field_75825_d, i, j).chunkExists(i & 31, j & 31);
+    }
+
     public Chunk func_75815_a(World p_75815_1_, int p_75815_2_, int p_75815_3_) throws IOException
     {
+        Object[] data = this.loadChunk__Async(p_75815_1_, p_75815_2_, p_75815_3_);
+
+        if (data != null)
+        {
+            Chunk chunk = (Chunk) data[0];
+            NBTTagCompound nbttagcompound = (NBTTagCompound) data[1];
+            this.loadEntities(p_75815_1_, nbttagcompound.func_74775_l("Level"), chunk);
+            return chunk;
+        }
+
+        return null;
+    }
+
+    public Object[] loadChunk__Async(World p_75815_1_, int p_75815_2_, int p_75815_3_) throws IOException
+    {
         NBTTagCompound nbttagcompound = null;
         ChunkCoordIntPair chunkcoordintpair = new ChunkCoordIntPair(p_75815_2_, p_75815_3_);
         Object object = this.field_75827_c;
@@ -56,11 +96,13 @@
         {
             if (this.field_75826_b.contains(chunkcoordintpair))
             {
-                for (int k = 0; k < this.field_75828_a.size(); ++k)
+                Iterator iter = this.field_75828_a.iterator();
+                while (iter.hasNext())
                 {
-                    if (((AnvilChunkLoader.PendingChunk)this.field_75828_a.get(k)).field_76548_a.equals(chunkcoordintpair))
+                    PendingChunk pendingChunk = (PendingChunk)iter.next();
+                    if (pendingChunk.field_76548_a.equals(chunkcoordintpair))
                     {
-                        nbttagcompound = ((AnvilChunkLoader.PendingChunk)this.field_75828_a.get(k)).field_76547_b;
+                        nbttagcompound = pendingChunk.field_76547_b;
                         break;
                     }
                 }
@@ -79,11 +121,24 @@
             nbttagcompound = CompressedStreamTools.func_74794_a(datainputstream);
         }
 
-        return this.func_75822_a(p_75815_1_, p_75815_2_, p_75815_3_, nbttagcompound);
+        return this.checkedReadChunkFromNBT__Async(p_75815_1_, p_75815_2_, p_75815_3_, nbttagcompound);
     }
 
     protected Chunk func_75822_a(World p_75822_1_, int p_75822_2_, int p_75822_3_, NBTTagCompound p_75822_4_)
     {
+        Object[] data = this.checkedReadChunkFromNBT__Async(p_75822_1_, p_75822_2_, p_75822_3_, p_75822_4_);
+
+        if (data != null)
+        {
+            Chunk chunk = (Chunk) data[0];
+            return chunk;
+        }
+
+        return null;
+    }
+
+    protected Object[] checkedReadChunkFromNBT__Async(World p_75822_1_, int p_75822_2_, int p_75822_3_, NBTTagCompound p_75822_4_)
+    {
         if (!p_75822_4_.func_150297_b("Level", 10))
         {
             field_151505_a.error("Chunk file at " + p_75822_2_ + "," + p_75822_3_ + " is missing level data, skipping");
@@ -103,10 +158,30 @@
                 field_151505_a.error("Chunk file at " + p_75822_2_ + "," + p_75822_3_ + " is in the wrong location; relocating. (Expected " + p_75822_2_ + ", " + p_75822_3_ + ", got " + chunk.field_76635_g + ", " + chunk.field_76647_h + ")");
                 p_75822_4_.func_74768_a("xPos", p_75822_2_);
                 p_75822_4_.func_74768_a("zPos", p_75822_3_);
+                // Have to move tile entities since we don't load them at this stage
+                NBTTagList tileEntities = p_75822_4_.func_74775_l("Level").func_150295_c("TileEntities", 10);
+
+                if (tileEntities != null)
+                {
+                    for (int te = 0; te < tileEntities.func_74745_c(); te++)
+                    {
+                        NBTTagCompound tileEntity = (NBTTagCompound) tileEntities.func_150305_b(te);
+                        int x = tileEntity.func_74762_e("x") - chunk.field_76635_g * 16;
+                        int z = tileEntity.func_74762_e("z") - chunk.field_76647_h * 16;
+                        tileEntity.func_74768_a("x", p_75822_2_ * 16 + x);
+                        tileEntity.func_74768_a("z", p_75822_3_ * 16 + z);
+                    }
+                }
+
                 chunk = this.func_75823_a(p_75822_1_, p_75822_4_.func_74775_l("Level"));
             }
 
-            return chunk;
+            Object[] data = new Object[2];
+            data[0] = chunk;
+            data[1] = p_75822_4_;
+            // event is fired in ChunkIOProvider.callStage2 since it must be fired after TE's load.
+            // MinecraftForge.EVENT_BUS.post(new ChunkDataEvent.Load(chunk, par4NBTTagCompound));
+            return data;
         }
     }
 
@@ -120,6 +195,7 @@
             NBTTagCompound nbttagcompound1 = new NBTTagCompound();
             nbttagcompound.func_74782_a("Level", nbttagcompound1);
             this.func_75820_a(p_75816_2_, p_75816_1_, nbttagcompound1);
+            MinecraftForge.EVENT_BUS.post(new ChunkDataEvent.Save(p_75816_2_, nbttagcompound));
             this.func_75824_a(p_75816_2_.func_76632_l(), nbttagcompound);
         }
         catch (Exception exception)
@@ -310,7 +310,11 @@
                 nbttagcompound1.func_74774_a("Y", (byte)(extendedblockstorage.func_76662_d() >> 4 & 255));
+                if(ExtendedBlockStorage.USING_16BIT_BLOCK_IDS)
+                    nbttagcompound1.func_74773_a("Blocks16", extendedblockstorage.get16BitBlockArray());
+                else {
                 nbttagcompound1.func_74773_a("Blocks", extendedblockstorage.func_76658_g());
 
                 if (extendedblockstorage.func_76660_i() != null)
                 {
                     nbttagcompound1.func_74773_a("Add", extendedblockstorage.func_76660_i().field_76585_a);
                 }
+                }
@@ -354,2 +430,5 @@
             ExtendedBlockStorage extendedblockstorage = new ExtendedBlockStorage(b1 << 4, flag);
+            if(ExtendedBlockStorage.USING_16BIT_BLOCK_IDS)
+                extendedblockstorage.set16BitBlockArray(nbttagcompound1.getByteArray("Blocks16"));
+            else {
             extendedblockstorage.func_76664_a(nbttagcompound1.func_74770_j("Blocks"));
@@ -362,2 +438,3 @@
                 extendedblockstorage.func_76673_a(new NibbleArray(nbttagcompound1.func_74770_j("Add"), 4));
             }
+            }
@@ -373,6 +449,12 @@
             chunk.func_76616_a(p_75823_2_.func_74770_j("Biomes"));
         }
 
+        // End this method here and split off entity loading to another method
+        return chunk;
+    }
+
+    public void loadEntities(World p_75823_1_, NBTTagCompound p_75823_2_, Chunk chunk)
+    {
         NBTTagList nbttaglist1 = p_75823_2_.func_150295_c("Entities", 10);
 
         if (nbttaglist1 != null)
@@ -434,7 +516,7 @@
             }
         }
 
-        return chunk;
+        // return chunk;
     }
 
     static class PendingChunk
